// Copyright (c) 2017 Western Digital Corporation or its affiliates. All rights reserved.
// SPDX-License-Identifier: MIT

namespace internal.core;

// StorageClass specifies how blob data is stored. If a blob has a certain
// storage class, then all tracts in the blob are encoded with that class.
// (They may also be encoded with another class at the same time, to allow for
// transitions beteween classes).
enum StorageClass : int32 {
	// Data is fully replicated n times.
	REPLICATED,
	// Reed-Solomon N_M, with N data and M parity.
	RS_6_3,   // 1.500 factor
	RS_8_3,   // 1.375
	RS_10_3,  // 1.300
	RS_12_5,  // 1.417 (but more durability)
}

// StorageHint is a hint specified by client code about how it intends to use
// this blob in the future. Blb will use the storage hint in conjunction with
// usage data that it collects to choose an appropriate storage class for the
// blob.
enum StorageHint : int32 {
	DEFAULT, // Default storage.
	HOT ,    // Data will be read frequently and might be written to in the future.
	WARM,    // Data will be read less often and is write-once.
	COLD,    // Data will be read rarely and is write-once.
}


// Priority is a hint to the tractserver about how to order operations.
enum Priority : int32 {
	TSDEFAULT, // Let the tractserver use its default (in practice, equal to MEDIUM).
	LOW,       // Lower priority than most operations (equal to scrubbing priority).
	MEDIUM,    // Normal priority.
	HIGH,      // Higher priority than most operations.
}
