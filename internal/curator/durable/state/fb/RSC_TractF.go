// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fb

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type RSC_TractF struct {
	_tab flatbuffers.Struct
}

func (rcv *RSC_TractF) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *RSC_TractF) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *RSC_TractF) Id(obj *TractIDF) *TractIDF {
	if obj == nil {
		obj = new(TractIDF)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+0)
	return obj
}
func (rcv *RSC_TractF) Length() uint32 {
	return rcv._tab.GetUint32(rcv._tab.Pos + flatbuffers.UOffsetT(12))
}
func (rcv *RSC_TractF) MutateLength(n uint32) bool {
	return rcv._tab.MutateUint32(rcv._tab.Pos+flatbuffers.UOffsetT(12), n)
}

func (rcv *RSC_TractF) Offset() uint32 {
	return rcv._tab.GetUint32(rcv._tab.Pos + flatbuffers.UOffsetT(16))
}
func (rcv *RSC_TractF) MutateOffset(n uint32) bool {
	return rcv._tab.MutateUint32(rcv._tab.Pos+flatbuffers.UOffsetT(16), n)
}

func CreateRSC_TractF(builder *flatbuffers.Builder, id_b1 uint16, id_b2 uint16, id_b3 uint16, id_b4 uint16, id_b5 uint16, length uint32, offset uint32) flatbuffers.UOffsetT {
	builder.Prep(4, 20)
	builder.PrependUint32(offset)
	builder.PrependUint32(length)
	builder.Pad(2)
	builder.Prep(2, 10)
	builder.PrependUint16(id_b5)
	builder.PrependUint16(id_b4)
	builder.PrependUint16(id_b3)
	builder.PrependUint16(id_b2)
	builder.PrependUint16(id_b1)
	return builder.Offset()
}
